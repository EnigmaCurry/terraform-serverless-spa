{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "VisualEditor0",
            "Effect": "Allow",
            "Action": "iam:CreateServiceLinkedRole",
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "iam:AWSServiceName": [
                        "autoscaling.amazonaws.com",
                        "ec2scheduled.amazonaws.com",
                        "elasticloadbalancing.amazonaws.com",
                        "spot.amazonaws.com",
                        "spotfleet.amazonaws.com"
                    ]
                }
            }
        },
        {
            "Sid": "VisualEditor1",
            "Effect": "Allow",
            "Action": [
                "waf:ListWebACLs",
                "iam:GetPolicyVersion",
                "iam:ListServerCertificates",
                "logs:*",
                "dynamodb:*",
                "sns:Unsubscribe",
                "cloudformation:DescribeStackResource",
                "cloudformation:CreateChangeSet",
                "autoscaling:*",
                "xray:PutTraceSegments",
                "iot:DescribeEndpoint",
                "elasticloadbalancing:DescribeLoadBalancers",
                "kinesis:ListStreams",
                "cloudfront:*",
                "cognito-sync:SetCognitoEvents",
                "route53domains:*",
                "secretsmanager:*",
                "elasticbeanstalk:DescribeEnvironments",
                "iam:ListAttachedRolePolicies",
                "sns:Subscribe",
                "iam:ListRolePolicies",
                "cloudformation:DescribeChangeSet",
                "events:*",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:ListStackResources",
                "waf:GetWebACL",
                "iam:GetRole",
                "sns:ListSubscriptionsByTopic",
                "iam:GetPolicy",
                "s3:GetBucketWebsite",
                "lambda:ListFunctions",
                "iot:GetTopicRule",
                "sqs:SendMessage",
                "cloudformation:DescribeStackResources",
                "cloudwatch:GetMetricStatistics",
                "cloudformation:DescribeStacks",
                "iot:CreateTopicRule",
                "iam:*",
                "kinesis:PutRecord",
                "cloudwatch:*",
                "cloudformation:GetTemplate",
                "cloudwatch:DescribeAlarms",
                "iot:ListPolicies",
                "ec2:*",
                "cognito-idp:*",
                "ec2:DescribeSubnets",
                "iam:GetRolePolicy",
                "iot:ListThings",
                "iot:ReplaceTopicRule",
                "tag:GetResources",
                "xray:PutTelemetryRecords",
                "iot:AttachThingPrincipal",
                "cognito-identity:ListIdentityPools",
                "ec2:DescribeRegions",
                "sns:ListTopics",
                "iot:CreatePolicy",
                "s3:ListBucket",
                "cognito-sync:*",
                "iam:PassRole",
                "sns:Publish",
                "cognito-sync:GetCognitoEvents",
                "rds:DescribeDBInstances",
                "kms:DescribeKey",
                "acm:ListCertificates",
                "iot:CreateKeysAndCertificate",
                "sqs:ListQueues",
                "iot:ListTopicRules",
                "iot:CreateThing",
                "cognito-identity:*",
                "iot:AttachPrincipalPolicy",
                "s3:*",
                "iam:ListRoles",
                "kinesis:DescribeStream",
                "elasticloadbalancing:*",
                "sns:ListSubscriptions",
                "ec2:DescribeSecurityGroups",
                "kms:ListKeys",
                "iam:ListOpenIDConnectProviders",
                "ec2:DescribeVpcs",
                "kms:ListAliases",
                "lambda:*",
                "route53:*",
                "cloudfront:ListDistributions",
                "s3:GetBucketLocation",
                "sns:ListPlatformApplications",
                "acm:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "VisualEditor2",
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "lambda:AddPermission",
                "apigateway:*",
                "lambda:InvokeFunction",
                "lambda:GetFunction",
                "execute-api:Invoke"
            ],
            "Resource": [
                "arn:aws:s3:::awsserverlessrepo-changesets*",
                "arn:aws:apigateway:*::/*",
                "arn:aws:execute-api:*:*:*",
                "arn:aws:lambda:*:*:function:SecretsManager*"
            ]
        },
        {
            "Sid": "VisualEditor3",
            "Effect": "Allow",
            "Action": [
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration"
            ],
            "Resource": "arn:aws:lambda:*:*:function:SecretsManager*"
        },
        {
            "Sid": "VisualEditor4",
            "Effect": "Allow",
            "Action": "serverlessrepo:CreateCloudFormationChangeSet",
            "Resource": "arn:aws:serverlessrepo:*:*:applications/SecretsManager*"
        },
        {
            "Sid": "VisualEditor5",
            "Effect": "Allow",
            "Action": "s3:ListAllMyBuckets",
            "Resource": "arn:aws:s3:::*"
        }
    ]
}
